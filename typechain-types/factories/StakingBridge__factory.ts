/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { StakingBridge, StakingBridgeInterface } from "../StakingBridge";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_processor",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
  {
    inputs: [],
    name: "LQTY",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "LUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "STAKING_CONTRACT",
    outputs: [
      {
        internalType: "contract ILQTYStaking",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNI_ROUTER",
    outputs: [
      {
        internalType: "contract ISwapRouter",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "inputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAsync",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    name: "finalise",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "processor",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setApprovals",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162003d7738038062003d7783398181016040528101906200003791906200022c565b6040518060400160405280600d81526020017f5374616b696e67427269646765000000000000000000000000000000000000008152506040518060400160405280600281526020017f53420000000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000bb92919062000112565b508060049080519060200190620000d492919062000112565b5050508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505050620002c3565b82805462000120906200028d565b90600052602060002090601f01602090048101928262000144576000855562000190565b82601f106200015f57805160ff191683800117855562000190565b8280016001018555821562000190579182015b828111156200018f57825182559160200191906001019062000172565b5b5090506200019f9190620001a3565b5090565b5b80821115620001be576000816000905550600101620001a4565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001f482620001c7565b9050919050565b6200020681620001e7565b81146200021257600080fd5b50565b6000815190506200022681620001fb565b92915050565b600060208284031215620002455762000244620001c2565b5b6000620002558482850162000215565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002a657607f821691505b60208210811415620002bd57620002bc6200025e565b5b50919050565b608051613a83620002f46000396000818161070701528181610ed401528181610fe501526116f80152613a836000f3fe60806040526004361061012e5760003560e01c806389a30271116100ab578063ad5c46481161006f578063ad5c464814610422578063ce1b1d431461044d578063cf59d56314610478578063da19ddfb146104a3578063dd62ed3e146104ce578063ee0ab4651461050b57610135565b806389a302711461032057806395d89b411461034b5780639b07d34214610376578063a457c2d7146103a8578063a9059cbb146103e557610135565b806326c3b515116100f257806326c3b51514610232578063313ce56714610264578063395093511461028f57806370a08231146102cc5780638757b15b1461030957610135565b806306fdde0314610137578063095ea7b3146101625780630f92ca691461019f57806318160ddd146101ca57806323b872dd146101f557610135565b3661013557005b005b34801561014357600080fd5b5061014c610536565b60405161015991906124e9565b60405180910390f35b34801561016e57600080fd5b50610189600480360381019061018491906125a4565b6105c8565b60405161019691906125ff565b60405180910390f35b3480156101ab57600080fd5b506101b46105e6565b6040516101c19190612629565b60405180910390f35b3480156101d657600080fd5b506101df6105fe565b6040516101ec9190612653565b60405180910390f35b34801561020157600080fd5b5061021c6004803603810190610217919061266e565b610608565b60405161022991906125ff565b60405180910390f35b61024c60048036038101906102479190612725565b610700565b60405161025b939291906127e0565b60405180910390f35b34801561027057600080fd5b50610279610db9565b6040516102869190612833565b60405180910390f35b34801561029b57600080fd5b506102b660048036038101906102b191906125a4565b610dc2565b6040516102c391906125ff565b60405180910390f35b3480156102d857600080fd5b506102f360048036038101906102ee919061284e565b610e6e565b6040516103009190612653565b60405180910390f35b34801561031557600080fd5b5061031e610eb6565b005b34801561032c57600080fd5b506103356114da565b6040516103429190612629565b60405180910390f35b34801561035757600080fd5b506103606114f2565b60405161036d91906124e9565b60405180910390f35b610390600480360381019061038b919061287b565b611584565b60405161039f939291906127e0565b60405180910390f35b3480156103b457600080fd5b506103cf60048036038101906103ca91906125a4565b6115d5565b6040516103dc91906125ff565b60405180910390f35b3480156103f157600080fd5b5061040c600480360381019061040791906125a4565b6116c0565b60405161041991906125ff565b60405180910390f35b34801561042e57600080fd5b506104376116de565b6040516104449190612629565b60405180910390f35b34801561045957600080fd5b506104626116f6565b60405161046f9190612629565b60405180910390f35b34801561048457600080fd5b5061048d61171a565b60405161049a9190612629565b60405180910390f35b3480156104af57600080fd5b506104b8611732565b6040516104c5919061296b565b60405180910390f35b3480156104da57600080fd5b506104f560048036038101906104f09190612986565b61174a565b6040516105029190612653565b60405180910390f35b34801561051757600080fd5b506105206117d1565b60405161052d91906129e7565b60405180910390f35b60606003805461054590612a31565b80601f016020809104026020016040519081016040528092919081815260200182805461057190612a31565b80156105be5780601f10610593576101008083540402835291602001916105be565b820191906000526020600020905b8154815290600101906020018083116105a157829003601f168201915b5050505050905090565b60006105dc6105d56117e9565b84846117f1565b6001905092915050565b736dea81c8171d0ba574754ef6f8b412f2ed88c54d81565b6000600254905090565b60006106158484846119bc565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006106606117e9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d790612ad5565b60405180910390fd5b6106f4856106ec6117e9565b8584036117f1565b60019150509392505050565b60008060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a90612b41565b60405180910390fd5b736dea81c8171d0ba574754ef6f8b412f2ed88c54d73ffffffffffffffffffffffffffffffffffffffff168b60200160208101906107d1919061284e565b73ffffffffffffffffffffffffffffffffffffffff161415610aa8573073ffffffffffffffffffffffffffffffffffffffff16896020016020810190610817919061284e565b73ffffffffffffffffffffffffffffffffffffffff161461086d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161086490612bd3565b60405180910390fd5b734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d73ffffffffffffffffffffffffffffffffffffffff1663a694fc3a886040518263ffffffff1660e01b81526004016108ba9190612653565b600060405180830381600087803b1580156108d457600080fd5b505af11580156108e8573d6000803e3d6000fd5b505050506108f4611c3d565b60003073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610941573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109659190612c08565b141561097357869250610a99565b600087734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d73ffffffffffffffffffffffffffffffffffffffff166316934fc4306040518263ffffffff1660e01b81526004016109c39190612629565b602060405180830381865afa1580156109e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a049190612c08565b610a0e9190612c64565b905080883073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a819190612c08565b610a8b9190612c98565b610a959190612d21565b9350505b610aa3308461210f565b610dab565b3073ffffffffffffffffffffffffffffffffffffffff168b6020016020810190610ad2919061284e565b73ffffffffffffffffffffffffffffffffffffffff16148015610b465750736dea81c8171d0ba574754ef6f8b412f2ed88c54d73ffffffffffffffffffffffffffffffffffffffff16896020016020810190610b2e919061284e565b73ffffffffffffffffffffffffffffffffffffffff16145b610b85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b7c90612dc4565b60405180910390fd5b734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d73ffffffffffffffffffffffffffffffffffffffff16632e17de7860006040518263ffffffff1660e01b8152600401610bd39190612e1f565b600060405180830381600087803b158015610bed57600080fd5b505af1158015610c01573d6000803e3d6000fd5b50505050610c0d611c3d565b3073ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c58573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c7c9190612c08565b87734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d73ffffffffffffffffffffffffffffffffffffffff166316934fc4306040518263ffffffff1660e01b8152600401610cca9190612629565b602060405180830381865afa158015610ce7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0b9190612c08565b610d159190612c98565b610d1f9190612d21565b9250734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d73ffffffffffffffffffffffffffffffffffffffff16632e17de78846040518263ffffffff1660e01b8152600401610d6e9190612653565b600060405180830381600087803b158015610d8857600080fd5b505af1158015610d9c573d6000803e3d6000fd5b50505050610daa308861226f565b5b985098509895505050505050565b60006012905090565b6000610e64610dcf6117e9565b848460016000610ddd6117e9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610e5f9190612e3a565b6117f1565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b3073ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401610f31929190612e90565b6020604051808303816000875af1158015610f50573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f749190612ee5565b610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa90612f84565b60405180910390fd5b736dea81c8171d0ba574754ef6f8b412f2ed88c54d73ffffffffffffffffffffffffffffffffffffffff1663095ea7b37f00000000000000000000000000000000000000000000000000000000000000007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401611042929190612e90565b6020604051808303816000875af1158015611061573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110859190612ee5565b6110c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110bb90613016565b60405180910390fd5b736dea81c8171d0ba574754ef6f8b412f2ed88c54d73ffffffffffffffffffffffffffffffffffffffff1663095ea7b3734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401611147929190612e90565b6020604051808303816000875af1158015611166573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118a9190612ee5565b6111c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111c0906130a8565b60405180910390fd5b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c058615647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b815260040161124c929190612e90565b6020604051808303816000875af115801561126b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061128f9190612ee5565b6112ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112c59061313a565b60405180910390fd5b735f98805a4e8be255a32880fdec7f6728c6568ba073ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c058615647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401611351929190612e90565b6020604051808303816000875af1158015611370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113949190612ee5565b6113d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ca90613016565b60405180910390fd5b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4873ffffffffffffffffffffffffffffffffffffffff1663095ea7b373e592427a0aece92de3edee1f18e0157c058615647fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6040518363ffffffff1660e01b8152600401611456929190612e90565b6020604051808303816000875af1158015611475573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114999190612ee5565b6114d8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114cf906131cc565b60405180910390fd5b565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b60606004805461150190612a31565b80601f016020809104026020016040519081016040528092919081815260200182805461152d90612a31565b801561157a5780601f1061154f5761010080835404028352916020019161157a565b820191906000526020600020905b81548152906001019060200180831161155d57829003601f168201915b5050505050905090565b6000806000806115c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115c09061325e565b60405180910390fd5b96509650969350505050565b600080600160006115e46117e9565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156116a1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611698906132f0565b60405180910390fd5b6116b56116ac6117e9565b858584036117f1565b600191505092915050565b60006116d46116cd6117e9565b84846119bc565b6001905092915050565b73c02aaa39b223fe8d0a0e5c4f27ead9083c756cc281565b7f000000000000000000000000000000000000000000000000000000000000000081565b735f98805a4e8be255a32880fdec7f6728c6568ba081565b734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d81565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b73e592427a0aece92de3edee1f18e0157c0586156481565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611861576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161185890613382565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156118d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118c890613414565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516119af9190612653565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a2c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a23906134a6565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a9390613538565b60405180910390fd5b611aa7838383612446565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611b2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611b24906135ca565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611bc09190612e3a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611c249190612653565b60405180910390a3611c3784848461244b565b50505050565b6000735f98805a4e8be255a32880fdec7f6728c6568ba073ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611c8c9190612629565b602060405180830381865afa158015611ca9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccd9190612c08565b905060008114611e0d5773e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663c04b8d596040518060a00160405280735f98805a4e8be255a32880fdec7f6728c6568ba06101f473a0b86991c6218b36c1d19d4a2e9eb0ce3606eb486101f473c02aaa39b223fe8d0a0e5c4f27ead9083c756cc2604051602001611d6b959493929190613677565b60405160208183030381529060405281526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200160008152506040518263ffffffff1660e01b8152600401611dc891906137bf565b6020604051808303816000875af1158015611de7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e0b9190612c08565b505b600047905060008114611e905773c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff1663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b158015611e7657600080fd5b505af1158015611e8a573d6000803e3d6000fd5b50505050505b600073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401611edf9190612629565b602060405180830381865afa158015611efc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611f209190612c08565b90506000811461210a57600073e592427a0aece92de3edee1f18e0157c0586156473ffffffffffffffffffffffffffffffffffffffff1663414bf38960405180610100016040528073c02aaa39b223fe8d0a0e5c4f27ead9083c756cc273ffffffffffffffffffffffffffffffffffffffff168152602001736dea81c8171d0ba574754ef6f8b412f2ed88c54d73ffffffffffffffffffffffffffffffffffffffff168152602001610bb862ffffff1681526020013073ffffffffffffffffffffffffffffffffffffffff16815260200142815260200185815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152506040518263ffffffff1660e01b815260040161203b91906138a1565b6020604051808303816000875af115801561205a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207e9190612c08565b90506000811461210857734f9fbb3f1e99b56e0fe2892e623ed36a76fc605d73ffffffffffffffffffffffffffffffffffffffff1663a694fc3a826040518263ffffffff1660e01b81526004016120d59190612653565b600060405180830381600087803b1580156120ef57600080fd5b505af1158015612103573d6000803e3d6000fd5b505050505b505b505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561217f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161217690613909565b60405180910390fd5b61218b60008383612446565b806002600082825461219d9190612e3a565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546121f29190612e3a565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516122579190612653565b60405180910390a361226b6000838361244b565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156122df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d69061399b565b60405180910390fd5b6122eb82600083612446565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015612371576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236890613a2d565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546123c89190612c64565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161242d9190612653565b60405180910390a36124418360008461244b565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561248a57808201518184015260208101905061246f565b83811115612499576000848401525b50505050565b6000601f19601f8301169050919050565b60006124bb82612450565b6124c5818561245b565b93506124d581856020860161246c565b6124de8161249f565b840191505092915050565b6000602082019050818103600083015261250381846124b0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061253b82612510565b9050919050565b61254b81612530565b811461255657600080fd5b50565b60008135905061256881612542565b92915050565b6000819050919050565b6125818161256e565b811461258c57600080fd5b50565b60008135905061259e81612578565b92915050565b600080604083850312156125bb576125ba61250b565b5b60006125c985828601612559565b92505060206125da8582860161258f565b9150509250929050565b60008115159050919050565b6125f9816125e4565b82525050565b600060208201905061261460008301846125f0565b92915050565b61262381612530565b82525050565b600060208201905061263e600083018461261a565b92915050565b61264d8161256e565b82525050565b60006020820190506126686000830184612644565b92915050565b6000806000606084860312156126875761268661250b565b5b600061269586828701612559565b93505060206126a686828701612559565b92505060406126b78682870161258f565b9150509250925092565b600080fd5b6000606082840312156126dc576126db6126c1565b5b81905092915050565b600067ffffffffffffffff82169050919050565b612702816126e5565b811461270d57600080fd5b50565b60008135905061271f816126f9565b92915050565b600080600080600080600080610200898b0312156127465761274561250b565b5b60006127548b828c016126c6565b98505060606127658b828c016126c6565b97505060c06127768b828c016126c6565b9650506101206127888b828c016126c6565b95505061018061279a8b828c0161258f565b9450506101a06127ac8b828c0161258f565b9350506101c06127be8b828c01612710565b9250506101e06127d08b828c01612559565b9150509295985092959890939650565b60006060820190506127f56000830186612644565b6128026020830185612644565b61280f60408301846125f0565b949350505050565b600060ff82169050919050565b61282d81612817565b82525050565b60006020820190506128486000830184612824565b92915050565b6000602082840312156128645761286361250b565b5b600061287284828501612559565b91505092915050565b6000806000806000806101c087890312156128995761289861250b565b5b60006128a789828a016126c6565b96505060606128b889828a016126c6565b95505060c06128c989828a016126c6565b9450506101206128db89828a016126c6565b9350506101806128ed89828a0161258f565b9250506101a06128ff89828a01612710565b9150509295509295509295565b6000819050919050565b600061293161292c61292784612510565b61290c565b612510565b9050919050565b600061294382612916565b9050919050565b600061295582612938565b9050919050565b6129658161294a565b82525050565b6000602082019050612980600083018461295c565b92915050565b6000806040838503121561299d5761299c61250b565b5b60006129ab85828601612559565b92505060206129bc85828601612559565b9150509250929050565b60006129d182612938565b9050919050565b6129e1816129c6565b82525050565b60006020820190506129fc60008301846129d8565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680612a4957607f821691505b60208210811415612a5d57612a5c612a02565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000612abf60288361245b565b9150612aca82612a63565b604082019050919050565b60006020820190508181036000830152612aee81612ab2565b9050919050565b7f5374616b696e674272696467653a20494e56414c49445f43414c4c4552000000600082015250565b6000612b2b601d8361245b565b9150612b3682612af5565b602082019050919050565b60006020820190508181036000830152612b5a81612b1e565b9050919050565b7f5374616b696e674272696467653a20494e434f52524543545f4445504f53495460008201527f5f494e5055540000000000000000000000000000000000000000000000000000602082015250565b6000612bbd60268361245b565b9150612bc882612b61565b604082019050919050565b60006020820190508181036000830152612bec81612bb0565b9050919050565b600081519050612c0281612578565b92915050565b600060208284031215612c1e57612c1d61250b565b5b6000612c2c84828501612bf3565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000612c6f8261256e565b9150612c7a8361256e565b925082821015612c8d57612c8c612c35565b5b828203905092915050565b6000612ca38261256e565b9150612cae8361256e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615612ce757612ce6612c35565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000612d2c8261256e565b9150612d378361256e565b925082612d4757612d46612cf2565b5b828204905092915050565b7f5374616b696e674272696467653a20494e434f52524543545f5749544844524160008201527f57414c5f494e5055540000000000000000000000000000000000000000000000602082015250565b6000612dae60298361245b565b9150612db982612d52565b604082019050919050565b60006020820190508181036000830152612ddd81612da1565b9050919050565b6000819050919050565b6000612e09612e04612dff84612de4565b61290c565b61256e565b9050919050565b612e1981612dee565b82525050565b6000602082019050612e346000830184612e10565b92915050565b6000612e458261256e565b9150612e508361256e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612e8557612e84612c35565b5b828201905092915050565b6000604082019050612ea5600083018561261a565b612eb26020830184612644565b9392505050565b612ec2816125e4565b8114612ecd57600080fd5b50565b600081519050612edf81612eb9565b92915050565b600060208284031215612efb57612efa61250b565b5b6000612f0984828501612ed0565b91505092915050565b7f5374616b696e674272696467653a205342425f415050524f56455f4641494c4560008201527f4400000000000000000000000000000000000000000000000000000000000000602082015250565b6000612f6e60218361245b565b9150612f7982612f12565b604082019050919050565b60006020820190508181036000830152612f9d81612f61565b9050919050565b7f5374616b696e674272696467653a204c5553445f415050524f56455f4641494c60008201527f4544000000000000000000000000000000000000000000000000000000000000602082015250565b600061300060228361245b565b915061300b82612fa4565b604082019050919050565b6000602082019050818103600083015261302f81612ff3565b9050919050565b7f5374616b696e674272696467653a204c5154595f415050524f56455f4641494c60008201527f4544000000000000000000000000000000000000000000000000000000000000602082015250565b600061309260228361245b565b915061309d82613036565b604082019050919050565b600060208201905081810360008301526130c181613085565b9050919050565b7f5374616b696e674272696467653a20574554485f415050524f56455f4641494c60008201527f4544000000000000000000000000000000000000000000000000000000000000602082015250565b600061312460228361245b565b915061312f826130c8565b604082019050919050565b6000602082019050818103600083015261315381613117565b9050919050565b7f5374616b696e674272696467653a20555344435f415050524f56455f4641494c60008201527f4544000000000000000000000000000000000000000000000000000000000000602082015250565b60006131b660228361245b565b91506131c18261315a565b604082019050919050565b600060208201905081810360008301526131e5816131a9565b9050919050565b7f5374616b696e674272696467653a204153594e435f4d4f44455f44495341424c60008201527f4544000000000000000000000000000000000000000000000000000000000000602082015250565b600061324860228361245b565b9150613253826131ec565b604082019050919050565b600060208201905081810360008301526132778161323b565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006132da60258361245b565b91506132e58261327e565b604082019050919050565b60006020820190508181036000830152613309816132cd565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061336c60248361245b565b915061337782613310565b604082019050919050565b6000602082019050818103600083015261339b8161335f565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006133fe60228361245b565b9150613409826133a2565b604082019050919050565b6000602082019050818103600083015261342d816133f1565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061349060258361245b565b915061349b82613434565b604082019050919050565b600060208201905081810360008301526134bf81613483565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b600061352260238361245b565b915061352d826134c6565b604082019050919050565b6000602082019050818103600083015261355181613515565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006135b460268361245b565b91506135bf82613558565b604082019050919050565b600060208201905081810360008301526135e3816135a7565b9050919050565b60008160601b9050919050565b6000613602826135ea565b9050919050565b6000613614826135f7565b9050919050565b61362c61362782612530565b613609565b82525050565b600062ffffff82169050919050565b60008160e81b9050919050565b600061365982613641565b9050919050565b61367161366c82613632565b61364e565b82525050565b6000613683828861361b565b6014820191506136938287613660565b6003820191506136a3828661361b565b6014820191506136b38285613660565b6003820191506136c3828461361b565b6014820191508190509695505050505050565b600081519050919050565b600082825260208201905092915050565b60006136fd826136d6565b61370781856136e1565b935061371781856020860161246c565b6137208161249f565b840191505092915050565b61373481612530565b82525050565b6137438161256e565b82525050565b600060a083016000830151848203600086015261376682826136f2565b915050602083015161377b602086018261372b565b50604083015161378e604086018261373a565b5060608301516137a1606086018261373a565b5060808301516137b4608086018261373a565b508091505092915050565b600060208201905081810360008301526137d98184613749565b905092915050565b6137ea81613632565b82525050565b6137f981612510565b82525050565b61010082016000820151613816600085018261372b565b506020820151613829602085018261372b565b50604082015161383c60408501826137e1565b50606082015161384f606085018261372b565b506080820151613862608085018261373a565b5060a082015161387560a085018261373a565b5060c082015161388860c085018261373a565b5060e082015161389b60e08501826137f0565b50505050565b6000610100820190506138b760008301846137ff565b92915050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b60006138f3601f8361245b565b91506138fe826138bd565b602082019050919050565b60006020820190508181036000830152613922816138e6565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b600061398560218361245b565b915061399082613929565b604082019050919050565b600060208201905081810360008301526139b481613978565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000613a1760228361245b565b9150613a22826139bb565b604082019050919050565b60006020820190508181036000830152613a4681613a0a565b905091905056fea264697066735822122054c2998b492cb5f0d1c5fb01a0a1728b90cd5170092121d6e096291f6a4f39c364736f6c634300080a0033";

type StakingBridgeConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingBridgeConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class StakingBridge__factory extends ContractFactory {
  constructor(...args: StakingBridgeConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "StakingBridge";
  }

  deploy(
    _processor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingBridge> {
    return super.deploy(_processor, overrides || {}) as Promise<StakingBridge>;
  }
  getDeployTransaction(
    _processor: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_processor, overrides || {});
  }
  attach(address: string): StakingBridge {
    return super.attach(address) as StakingBridge;
  }
  connect(signer: Signer): StakingBridge__factory {
    return super.connect(signer) as StakingBridge__factory;
  }
  static readonly contractName: "StakingBridge";
  public readonly contractName: "StakingBridge";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingBridgeInterface {
    return new utils.Interface(_abi) as StakingBridgeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingBridge {
    return new Contract(address, _abi, signerOrProvider) as StakingBridge;
  }
}
