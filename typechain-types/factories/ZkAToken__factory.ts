/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  Overrides,
  BigNumberish,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ZkAToken, ZkATokenInterface } from "../ZkAToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "setDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620020e9380380620020e9833981810160405281019062000037919062000343565b8282816003908051906020019062000051929190620000b8565b5080600490805190602001906200006a929190620000b8565b5050503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508060ff1660a08160ff168152505050505062000442565b828054620000c6906200040c565b90600052602060002090601f016020900481019282620000ea576000855562000136565b82601f106200010557805160ff191683800117855562000136565b8280016001018555821562000136579182015b828111156200013557825182559160200191906001019062000118565b5b50905062000145919062000149565b5090565b5b80821115620001645760008160009055506001016200014a565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001d18262000186565b810181811067ffffffffffffffff82111715620001f357620001f262000197565b5b80604052505050565b60006200020862000168565b9050620002168282620001c6565b919050565b600067ffffffffffffffff82111562000239576200023862000197565b5b620002448262000186565b9050602081019050919050565b60005b838110156200027157808201518184015260208101905062000254565b8381111562000281576000848401525b50505050565b60006200029e62000298846200021b565b620001fc565b905082815260208101848484011115620002bd57620002bc62000181565b5b620002ca84828562000251565b509392505050565b600082601f830112620002ea57620002e96200017c565b5b8151620002fc84826020860162000287565b91505092915050565b600060ff82169050919050565b6200031d8162000305565b81146200032957600080fd5b50565b6000815190506200033d8162000312565b92915050565b6000806000606084860312156200035f576200035e62000172565b5b600084015167ffffffffffffffff81111562000380576200037f62000177565b5b6200038e86828701620002d2565b935050602084015167ffffffffffffffff811115620003b257620003b162000177565b5b620003c086828701620002d2565b9250506040620003d3868287016200032c565b9150509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042557607f821691505b602082108114156200043c576200043b620003dd565b5b50919050565b60805160a051611c73620004766000396000818161051301526106950152600081816105fc015261077c0152611c736000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806347b83d7d1161009757806395d89b411161006657806395d89b41146102af578063a457c2d7146102cd578063a9059cbb146102fd578063dd62ed3e1461032d57610100565b806347b83d7d1461022757806370a082311461024557806379cc6790146102755780638da5cb5b1461029157610100565b8063313ce567116100d3578063313ce567146101a157806339509351146101bf57806340c10f19146101ef57806342966c681461020b57610100565b806306fdde0314610105578063095ea7b31461012357806318160ddd1461015357806323b872dd14610171575b600080fd5b61010d61035d565b60405161011a91906111ee565b60405180910390f35b61013d600480360381019061013891906112a9565b6103ef565b60405161014a9190611304565b60405180910390f35b61015b61040d565b604051610168919061132e565b60405180910390f35b61018b60048036038101906101869190611349565b610417565b6040516101989190611304565b60405180910390f35b6101a961050f565b6040516101b691906113b8565b60405180910390f35b6101d960048036038101906101d491906112a9565b610537565b6040516101e69190611304565b60405180910390f35b610209600480360381019061020491906112a9565b6105e3565b005b610225600480360381019061022091906113d3565b61067f565b005b61022f610693565b60405161023c91906113b8565b60405180910390f35b61025f600480360381019061025a9190611400565b6106b7565b60405161026c919061132e565b60405180910390f35b61028f600480360381019061028a91906112a9565b6106ff565b005b61029961077a565b6040516102a6919061143c565b60405180910390f35b6102b761079e565b6040516102c491906111ee565b60405180910390f35b6102e760048036038101906102e291906112a9565b610830565b6040516102f49190611304565b60405180910390f35b610317600480360381019061031291906112a9565b61091b565b6040516103249190611304565b60405180910390f35b61034760048036038101906103429190611457565b610939565b604051610354919061132e565b60405180910390f35b60606003805461036c906114c6565b80601f0160208091040260200160405190810160405280929190818152602001828054610398906114c6565b80156103e55780601f106103ba576101008083540402835291602001916103e5565b820191906000526020600020905b8154815290600101906020018083116103c857829003601f168201915b5050505050905090565b60006104036103fc6109c0565b84846109c8565b6001905092915050565b6000600254905090565b6000610424848484610b93565b6000600160008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061046f6109c0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156104ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e69061156a565b60405180910390fd5b610503856104fb6109c0565b8584036109c8565b60019150509392505050565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b60006105d96105446109c0565b8484600160006105526109c0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546105d491906115b9565b6109c8565b6001905092915050565b3373ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1614610671576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106689061165b565b60405180910390fd5b61067b8282610e14565b5050565b61069061068a6109c0565b82610f74565b50565b7f000000000000000000000000000000000000000000000000000000000000000081565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60006107128361070d6109c0565b610939565b905081811015610757576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074e906116ed565b60405180910390fd5b61076b836107636109c0565b8484036109c8565b6107758383610f74565b505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b6060600480546107ad906114c6565b80601f01602080910402602001604051908101604052809291908181526020018280546107d9906114c6565b80156108265780601f106107fb57610100808354040283529160200191610826565b820191906000526020600020905b81548152906001019060200180831161080957829003601f168201915b5050505050905090565b6000806001600061083f6109c0565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156108fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f39061177f565b60405180910390fd5b6109106109076109c0565b858584036109c8565b600191505092915050565b600061092f6109286109c0565b8484610b93565b6001905092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610a38576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a2f90611811565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610aa8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9f906118a3565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610b86919061132e565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bfa90611935565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c6a906119c7565b60405180910390fd5b610c7e83838361114b565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610d04576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cfb90611a59565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d9791906115b9565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610dfb919061132e565b60405180910390a3610e0e848484611150565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610e84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7b90611ac5565b60405180910390fd5b610e906000838361114b565b8060026000828254610ea291906115b9565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ef791906115b9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f5c919061132e565b60405180910390a3610f7060008383611150565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610fe4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fdb90611b57565b60405180910390fd5b610ff08260008361114b565b60008060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015611076576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161106d90611be9565b60405180910390fd5b8181036000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555081600260008282546110cd9190611c09565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051611132919061132e565b60405180910390a361114683600084611150565b505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561118f578082015181840152602081019050611174565b8381111561119e576000848401525b50505050565b6000601f19601f8301169050919050565b60006111c082611155565b6111ca8185611160565b93506111da818560208601611171565b6111e3816111a4565b840191505092915050565b6000602082019050818103600083015261120881846111b5565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061124082611215565b9050919050565b61125081611235565b811461125b57600080fd5b50565b60008135905061126d81611247565b92915050565b6000819050919050565b61128681611273565b811461129157600080fd5b50565b6000813590506112a38161127d565b92915050565b600080604083850312156112c0576112bf611210565b5b60006112ce8582860161125e565b92505060206112df85828601611294565b9150509250929050565b60008115159050919050565b6112fe816112e9565b82525050565b600060208201905061131960008301846112f5565b92915050565b61132881611273565b82525050565b6000602082019050611343600083018461131f565b92915050565b60008060006060848603121561136257611361611210565b5b60006113708682870161125e565b93505060206113818682870161125e565b925050604061139286828701611294565b9150509250925092565b600060ff82169050919050565b6113b28161139c565b82525050565b60006020820190506113cd60008301846113a9565b92915050565b6000602082840312156113e9576113e8611210565b5b60006113f784828501611294565b91505092915050565b60006020828403121561141657611415611210565b5b60006114248482850161125e565b91505092915050565b61143681611235565b82525050565b6000602082019050611451600083018461142d565b92915050565b6000806040838503121561146e5761146d611210565b5b600061147c8582860161125e565b925050602061148d8582860161125e565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114de57607f821691505b602082108114156114f2576114f1611497565b5b50919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206160008201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000602082015250565b6000611554602883611160565b915061155f826114f8565b604082019050919050565b6000602082019050818103600083015261158381611547565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006115c482611273565b91506115cf83611273565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156116045761160361158a565b5b828201905092915050565b7f5a6b41546f6b656e3a20494e56414c4944204f574e4552000000000000000000600082015250565b6000611645601783611160565b91506116508261160f565b602082019050919050565b6000602082019050818103600083015261167481611638565b9050919050565b7f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f7760008201527f616e636500000000000000000000000000000000000000000000000000000000602082015250565b60006116d7602483611160565b91506116e28261167b565b604082019050919050565b60006020820190508181036000830152611706816116ca565b9050919050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000611769602583611160565b91506117748261170d565b604082019050919050565b600060208201905081810360008301526117988161175c565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b60006117fb602483611160565b91506118068261179f565b604082019050919050565b6000602082019050818103600083015261182a816117ee565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b600061188d602283611160565b915061189882611831565b604082019050919050565b600060208201905081810360008301526118bc81611880565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b600061191f602583611160565b915061192a826118c3565b604082019050919050565b6000602082019050818103600083015261194e81611912565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006119b1602383611160565b91506119bc82611955565b604082019050919050565b600060208201905081810360008301526119e0816119a4565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b6000611a43602683611160565b9150611a4e826119e7565b604082019050919050565b60006020820190508181036000830152611a7281611a36565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611aaf601f83611160565b9150611aba82611a79565b602082019050919050565b60006020820190508181036000830152611ade81611aa2565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b6000611b41602183611160565b9150611b4c82611ae5565b604082019050919050565b60006020820190508181036000830152611b7081611b34565b9050919050565b7f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60008201527f6365000000000000000000000000000000000000000000000000000000000000602082015250565b6000611bd3602283611160565b9150611bde82611b77565b604082019050919050565b60006020820190508181036000830152611c0281611bc6565b9050919050565b6000611c1482611273565b9150611c1f83611273565b925082821015611c3257611c3161158a565b5b82820390509291505056fea26469706673582212203dbba55ca29244646813ced6956cff9ec32837e0329237b7f9b552e33739156f64736f6c634300080a0033";

type ZkATokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ZkATokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ZkAToken__factory extends ContractFactory {
  constructor(...args: ZkATokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ZkAToken";
  }

  deploy(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ZkAToken> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    ) as Promise<ZkAToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    _decimals: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      overrides || {}
    );
  }
  attach(address: string): ZkAToken {
    return super.attach(address) as ZkAToken;
  }
  connect(signer: Signer): ZkAToken__factory {
    return super.connect(signer) as ZkAToken__factory;
  }
  static readonly contractName: "ZkAToken";
  public readonly contractName: "ZkAToken";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ZkATokenInterface {
    return new utils.Interface(_abi) as ZkATokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ZkAToken {
    return new Contract(address, _abi, signerOrProvider) as ZkAToken;
  }
}
