/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  RollupProcessor,
  RollupProcessorInterface,
} from "../RollupProcessor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeProxyAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bridgeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalInputValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalOutputValueA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalOutputValueB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "AsyncDefiBridgeProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "bridgeId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalInputValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalOutputValueA",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalOutputValueB",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
    ],
    name: "DefiBridgeProcessed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "log_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "log_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "log_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    name: "log_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "val",
        type: "address",
      },
    ],
    name: "log_named_address",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "log_named_bytes",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "val",
        type: "bytes32",
      },
    ],
    name: "log_named_bytes32",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "decimals",
        type: "uint256",
      },
    ],
    name: "log_named_decimal_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "val",
        type: "int256",
      },
    ],
    name: "log_named_int",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "val",
        type: "string",
      },
    ],
    name: "log_named_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "key",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "val",
        type: "uint256",
      },
    ],
    name: "log_named_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "log_string",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "log_uint",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "logs",
    type: "event",
  },
  {
    inputs: [],
    name: "IS_TEST",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "inputAssetB",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetA",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "erc20Address",
            type: "address",
          },
          {
            internalType: "enum AztecTypes.AztecAssetType",
            name: "assetType",
            type: "uint8",
          },
        ],
        internalType: "struct AztecTypes.AztecAsset",
        name: "outputAssetB",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "totalInputValue",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "auxInputData",
        type: "uint256",
      },
    ],
    name: "convert",
    outputs: [
      {
        internalType: "uint256",
        name: "outputValueA",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "outputValueB",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isAsync",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "failed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
    ],
    name: "processAsyncDefiInteraction",
    outputs: [
      {
        internalType: "bool",
        name: "completed",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "interactionNonce",
        type: "uint256",
      },
    ],
    name: "receiveEthFromBridge",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "gasLimit",
        type: "uint256",
      },
    ],
    name: "setBridgeGasLimit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260016000806101000a81548160ff0219169083151502179055503480156200002b57600080fd5b5060405162001c7338038062001c73833981810160405281019062000051919062000103565b80600060026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000135565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000cb826200009e565b9050919050565b620000dd81620000be565b8114620000e957600080fd5b50565b600081519050620000fd81620000d2565b92915050565b6000602082840312156200011c576200011b62000099565b5b60006200012c84828501620000ec565b91505092915050565b611b2e80620001456000396000f3fe6080604052600436106100555760003560e01c806312a536231461005a57806314137e11146100765780638188f4681461009f578063ba414fa6146100dc578063d9b5fb7914610107578063fa7626d414610146575b600080fd5b610074600480360381019061006f9190611002565b610171565b005b34801561008257600080fd5b5061009d6004803603810190610098919061108d565b61019e565b005b3480156100ab57600080fd5b506100c660048036038101906100c19190611002565b6101e6565b6040516100d391906110e8565b60405180910390f35b3480156100e857600080fd5b506100f16106f5565b6040516100fe91906110e8565b60405180910390f35b34801561011357600080fd5b5061012e60048036038101906101299190611127565b610708565b60405161013d939291906111f0565b60405180910390f35b34801561015257600080fd5b5061015b610838565b60405161016891906110e8565b60405180910390f35b346001600083815260200190815260200160002060008282546101949190611256565b9250508190555050565b80600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505050565b600080600360008481526020019081526020016000209050600073ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415610292576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161028990611309565b60405180910390fd5b60008060008360000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b07d3428560010186600301876005018860070189600a01548a600b01546040518763ffffffff1660e01b8152600401610312969594939291906114de565b6060604051808303816000875af1158015610331573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103559190611584565b9250925092508094506000821180156103a657506000600381111561037d5761037c6113e6565b5b8460070160010160149054906101000a900460ff1660038111156103a4576103a36113e6565b5b145b156103ed5760006103ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103e390611649565b60405180910390fd5b5b6000831480156103fd5750600082145b156104e8576104e38460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600101604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660038111156104be576104bd6113e6565b5b60038111156104d0576104cf6113e6565b5b81525050866009015487600a0154610849565b6106a3565b6105c58460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600501604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff1660038111156105a4576105a36113e6565b5b60038111156105b6576105b56113e6565b5b815250508587600a0154610849565b6106a28460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600701604051806060016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166003811115610681576106806113e6565b5b6003811115610693576106926113e6565b5b815250508487600a0154610849565b5b83600a015460007f1ccb5390975e3d07503983a09c3b6a5d11a0e40c4cb4094a7187655f643ef7b48660090154868660016040516106e49493929190611669565b60405180910390a350505050919050565b600060019054906101000a900460ff1681565b60008060008060036000878152602001908152602001600020600b015414610765576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161075c90611720565b60405180910390fd5b60006001905060006040518061012001604052808e73ffffffffffffffffffffffffffffffffffffffff1681526020018d8036038101906107a6919061185a565b81526020018c8036038101906107bc919061185a565b81526020018b8036038101906107d2919061185a565b81526020018a8036038101906107e8919061185a565b8152602001898152602001888152602001878152602001838152509050600061081082610995565b9050806000015195508060200151945080604001519350505050985098509895505050505050565b60008054906101000a900460ff1681565b6001600381111561085d5761085c6113e6565b5b83604001516003811115610874576108736113e6565b5b14156108ed57600160008281526020019081526020016000205482146108cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c6906118f9565b60405180910390fd5b6000600160008381526020019081526020016000208190555061098f565b60026003811115610901576109006113e6565b5b83604001516003811115610918576109176113e6565b5b1480156109255750600082115b1561098e5760008360200151905060006040517f23b872dd000000000000000000000000000000000000000000000000000000008152866004820152306024820152846044820152602060006064836000875af191508161098a573d6000803e3d6000fd5b5050505b5b50505050565b61099d610f9a565b604051806101000160405280836000015173ffffffffffffffffffffffffffffffffffffffff168152602001836020015181526020018360400151815260200183606001518152602001836080015181526020018360a0015181526020018360c0015181526020018360e00151815250600360008460c00151815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836003811115610af057610aef6113e6565b5b021790555050506040820151816003016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836003811115610b7c57610b7b6113e6565b5b021790555050506060820151816005016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836003811115610c0857610c076113e6565b5b021790555050506080820151816007016000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff02191690836003811115610c9457610c936113e6565b5b0217905550505060a0820151816009015560c082015181600a015560e082015181600b015590505060008060026000856000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411610d12576308f0d180610d57565b60026000846000015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020545b9050600080600060029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168363ffd8e7b760e01b8760000151886020015189604001518a606001518b608001518c60a001518d60c001518e60e001518f6101000151604051602401610de49998979695949392919061196a565b604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610e4e9190611a75565b6000604051808303818686f4925050503d8060008114610e8a576040519150601f19603f3d011682016040523d82523d6000602084013e610e8f565b606091505b5091509150604051806060016040528060008152602001600081526020016000151581525093508115610f5257600080600083806020019051810190610ed59190611584565b92509250925080610f2a578760c0015160007f1ccb5390975e3d07503983a09c3b6a5d11a0e40c4cb4094a7187655f643ef7b48a60a0015186866001604051610f219493929190611669565b60405180910390a35b8287600001818152505081876020018181525050808760400190151590811515815250505050505b81610f92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f8990611ad8565b60405180910390fd5b505050919050565b604051806060016040528060008152602001600081526020016000151581525090565b6000604051905090565b600080fd5b6000819050919050565b610fdf81610fcc565b8114610fea57600080fd5b50565b600081359050610ffc81610fd6565b92915050565b60006020828403121561101857611017610fc7565b5b600061102684828501610fed565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061105a8261102f565b9050919050565b61106a8161104f565b811461107557600080fd5b50565b60008135905061108781611061565b92915050565b600080604083850312156110a4576110a3610fc7565b5b60006110b285828601611078565b92505060206110c385828601610fed565b9150509250929050565b60008115159050919050565b6110e2816110cd565b82525050565b60006020820190506110fd60008301846110d9565b92915050565b600080fd5b60006060828403121561111e5761111d611103565b5b81905092915050565b600080600080600080600080610200898b03121561114857611147610fc7565b5b60006111568b828c01611078565b98505060206111678b828c01611108565b97505060806111788b828c01611108565b96505060e06111898b828c01611108565b95505061014061119b8b828c01611108565b9450506101a06111ad8b828c01610fed565b9350506101c06111bf8b828c01610fed565b9250506101e06111d18b828c01610fed565b9150509295985092959890939650565b6111ea81610fcc565b82525050565b600060608201905061120560008301866111e1565b61121260208301856111e1565b61121f60408301846110d9565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061126182610fcc565b915061126c83610fcc565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112a1576112a0611227565b5b828201905092915050565b600082825260208201905092915050565b7f526f6c6c757020436f6e74726163743a20554e4b4e4f574e5f4e4f4e43450000600082015250565b60006112f3601e836112ac565b91506112fe826112bd565b602082019050919050565b60006020820190508181036000830152611322816112e6565b9050919050565b60008160001c9050919050565b6000819050919050565b600061135361134e83611329565b611336565b9050919050565b61136381610fcc565b82525050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061139c61139783611329565b611369565b9050919050565b6113ac8161104f565b82525050565b60008160a01c9050919050565b600060ff82169050919050565b60006113df6113da836113b2565b6113bf565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611426576114256113e6565b5b50565b600081905061143782611415565b919050565b600061144782611429565b9050919050565b6114578161143c565b82525050565b60608201600080830154905061147281611340565b61147f600086018261135a565b506001830154905061149081611389565b61149d60208601826113a3565b506114a7816113cc565b6114b4604086018261144e565b5050505050565b600067ffffffffffffffff82169050919050565b6114d8816114bb565b82525050565b60006101c0820190506114f4600083018961145d565b611501606083018861145d565b61150e60c083018761145d565b61151c61012083018661145d565b61152a6101808301856111e1565b6115386101a08301846114cf565b979650505050505050565b60008151905061155281610fd6565b92915050565b611561816110cd565b811461156c57600080fd5b50565b60008151905061157e81611558565b92915050565b60008060006060848603121561159d5761159c610fc7565b5b60006115ab86828701611543565b93505060206115bc86828701611543565b92505060406115cd8682870161156f565b9150509250925092565b7f4e6f6e2d7a65726f206f75747075742076616c7565206f6e206e6f6e2d65786960008201527f7374616e74206173736574210000000000000000000000000000000000000000602082015250565b6000611633602c836112ac565b915061163e826115d7565b604082019050919050565b6000602082019050818103600083015261166281611626565b9050919050565b600060808201905061167e60008301876111e1565b61168b60208301866111e1565b61169860408301856111e1565b6116a560608301846110d9565b95945050505050565b7f526f6c6c757020436f6e74726163743a20494e544552414354494f4e5f414c5260008201527f454144595f455849535453000000000000000000000000000000000000000000602082015250565b600061170a602b836112ac565b9150611715826116ae565b604082019050919050565b60006020820190508181036000830152611739816116fd565b9050919050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61178e82611745565b810181811067ffffffffffffffff821117156117ad576117ac611756565b5b80604052505050565b60006117c0610fbd565b90506117cc8282611785565b919050565b600481106117de57600080fd5b50565b6000813590506117f0816117d1565b92915050565b60006060828403121561180c5761180b611740565b5b61181660606117b6565b9050600061182684828501610fed565b600083015250602061183a84828501611078565b602083015250604061184e848285016117e1565b60408301525092915050565b6000606082840312156118705761186f610fc7565b5b600061187e848285016117f6565b91505092915050565b7f526f6c6c75702050726f636573736f723a20494e53554646494345494e545f4560008201527f54485f5041594d454e5400000000000000000000000000000000000000000000602082015250565b60006118e3602a836112ac565b91506118ee82611887565b604082019050919050565b60006020820190508181036000830152611912816118d6565b9050919050565b6119228161104f565b82525050565b60608201600082015161193e600085018261135a565b50602082015161195160208501826113a3565b506040820151611964604085018261144e565b50505050565b600061022082019050611980600083018c611919565b61198d602083018b611928565b61199a608083018a611928565b6119a760e0830189611928565b6119b5610140830188611928565b6119c36101a08301876111e1565b6119d16101c08301866111e1565b6119df6101e08301856111e1565b6119ed6102008301846111e1565b9a9950505050505050505050565b600081519050919050565b600081905092915050565b60005b83811015611a2f578082015181840152602081019050611a14565b83811115611a3e576000848401525b50505050565b6000611a4f826119fb565b611a598185611a06565b9350611a69818560208601611a11565b80840191505092915050565b6000611a818284611a44565b915081905092915050565b7f496e746572616374696f6e204661696c65640000000000000000000000000000600082015250565b6000611ac26012836112ac565b9150611acd82611a8c565b602082019050919050565b60006020820190508181036000830152611af181611ab5565b905091905056fea26469706673582212205c074e0bb7bc6d24c28746089605b46f6d43a585d5b1807822080d77ede3cefc64736f6c634300080a0033";

type RollupProcessorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RollupProcessorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RollupProcessor__factory extends ContractFactory {
  constructor(...args: RollupProcessorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "RollupProcessor";
  }

  deploy(
    _bridgeProxyAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<RollupProcessor> {
    return super.deploy(
      _bridgeProxyAddress,
      overrides || {}
    ) as Promise<RollupProcessor>;
  }
  getDeployTransaction(
    _bridgeProxyAddress: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_bridgeProxyAddress, overrides || {});
  }
  attach(address: string): RollupProcessor {
    return super.attach(address) as RollupProcessor;
  }
  connect(signer: Signer): RollupProcessor__factory {
    return super.connect(signer) as RollupProcessor__factory;
  }
  static readonly contractName: "RollupProcessor";
  public readonly contractName: "RollupProcessor";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RollupProcessorInterface {
    return new utils.Interface(_abi) as RollupProcessorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RollupProcessor {
    return new Contract(address, _abi, signerOrProvider) as RollupProcessor;
  }
}
